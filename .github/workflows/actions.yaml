
name: Testing

on:
  - pull_request
  - push

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # - uses: actions/cache@v3
      #   with:
      #     path: pros_noisefiltering
      #     key:  pros_noisefiltering-${{ matrix.targetPlatform }}
      #     restore-keys: pros_noisefiltering
      - name: Install dependencies and personal package (./pypkg/)
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .

  test_main_class:
    runs-on: ${{matrix.os}}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        id: mystuff
        with:
          python-version: '3.10'
          check-latest: true
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .
      # - uses: actions/cache@v3
      #   with:
      #     path: pros_noisefiltering
      #     key:  pros_noisefiltering-${{ matrix.targetPlatform }}
      #     restore-keys: pros_noisefiltering
      - name: Test with pytest
        run: |
          pytest --color=yes --verbose -k test_WT

  test_my_functions:
    runs-on: ${{matrix.os}}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true
      - if: ${{ steps.mystuff.outputs.cache-hit != 'true' }}
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .
      # - uses: actions/cache@v3
      #   with:
      #     path: pros_noisefiltering
      #     key:  pros_noisefiltering-${{ matrix.targetPlatform }}
      #     restore-keys: pros_noisefiltering

      - if: ${{ steps.mystuff.outputs.cache-hit == 'true' }}
        name: Test with pytest
        run: |
          pytest --color=yes --verbose -k test_functions
  test_plotter_class_ops:
    runs-on: ${{matrix.os}}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install -e .
      # - uses: actions/cache@v3
      #   with:
      #     path: pros_noisefiltering
      #     key:  pros_noisefiltering-${{ matrix.targetPlatform }}
      #     restore-keys: pros_noisefiltering
      - name: Test with pytest
        run: |
          pytest --color=yes --verbose -k test_Plotter
